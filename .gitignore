# 1. CNN Model For Image Recognition
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense
from keras.preprocessing.image import ImageDataGenerator
from keras.preprocessing import image


classifier=Sequential()

classifier.add(Conv2D(32,(3,3),input_shape=(64,64,3),activation='relu'))
classifier.add(MaxPooling2D(pool_size=(2,2)))
classifier.add(Flatten())
classifier.add(Dense(output_dim=128,activation='relu'))
classifier.add(Dense(output_dim=5,activation='sigmoid'))

classifier.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

train_datagen=ImageDataGenerator(rescale=1./255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)

test_datagen=ImageDataGenerator(rescale=1./255)


training_set=train_datagen.flow_from_directory('C:/Users/pc/Downloads/datasets/training',target_size=(64,64),batch_size=32,class_mode='categorical')

test_set=test_datagen.flow_from_directory('C:/Users/pc/Downloads/datasets/test',target_size=(64,64),batch_size=32,class_mode='categorical')
from IPython.display import display
from PIL import Image
classifier.fit_generator(training_set,steps_per_epoch=260,epochs=5,validation_data=test_set,validation_steps=260)



